{"ast":null,"code":"import axios from \"axios\";\nexport function getAllPoke() {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/pokemons\").then(obj => obj.json()).then(obj => dispatch({\n      type: \"GET_ALL_POKEMONS\",\n      payload: obj\n    }));\n    /* return dispatch({\r\n        type : \"GET_ALL_POKEMONS\",\r\n        payload : poke\r\n    }) */\n  };\n}\nexport function getOnePoke(name) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/pokemons?name=\" + name).then(obj => obj.json()).then(obj => dispatch({\n      type: \"GET_ONE_POKEMON\",\n      payload: obj\n    }));\n  };\n}\nexport function createPoke(data) {\n  return function (dispatch) {\n    console.log(\"entro\");\n    return fetch(\"http://localhost:3001/pokemons\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        //name, life , strong, defense, speed, height, weight, types\n        name: data.name,\n        life: data.life,\n        types: data.types,\n        speed: data.speed,\n        strong: data.strong,\n        defense: data.defense,\n        weight: data.weight,\n        height: data.height\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(obj => obj.json()).then(obj => dispatch({\n      type: \"CREATE_POKE\",\n      payload: obj\n    }));\n  };\n}\nexport function getTypes() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/types\").then(obj => obj.json()).then(obj => dispatch({\n      type: \"GET_TYPES\",\n      payload: obj\n    }));\n  };\n}\nexport function filterByType(type) {\n  return {\n    type: \"FILTER_BY_TYPE\",\n    payload: type\n  };\n}\nexport function filterByOrigin() {\n  return {\n    type: \"FILTER_BY_ORIGIN\",\n    payload: origin\n  };\n}","map":{"version":3,"sources":["C:/Users/USER/desktop/proyectos/Pokemon-Proyecto-Individual/pi-brunolococo/client/src/actions/index.js"],"names":["axios","getAllPoke","dispatch","fetch","then","obj","json","type","payload","getOnePoke","name","createPoke","data","console","log","method","body","JSON","stringify","life","types","speed","strong","defense","weight","height","headers","getTypes","filterByType","filterByOrigin","origin"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,UAAT,GAAuB;AAC1B,SAAO,UAAUC,QAAV,EAAmB;AACtB,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACFC,IADE,CACGC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADT,EAEFF,IAFE,CAEGC,GAAG,IAAIH,QAAQ,CAAC;AAClBK,MAAAA,IAAI,EAAG,kBADW;AAElBC,MAAAA,OAAO,EAAGH;AAFQ,KAAD,CAFlB,CAAP;AAMA;AACR;AACA;AACA;AACK,GAXD;AAYH;AAED,OAAO,SAASI,UAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAO,UAAUR,QAAV,EAAmB;AACtB,WAAOC,KAAK,CAAC,yCAAyCO,IAA1C,CAAL,CACFN,IADE,CACGC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADR,EAEFF,IAFE,CAEGC,GAAG,IAAIH,QAAQ,CAAC;AAClBK,MAAAA,IAAI,EAAG,iBADW;AAElBC,MAAAA,OAAO,EAAGH;AAFQ,KAAD,CAFlB,CAAP;AAMH,GAPD;AAQH;AAED,OAAO,SAASM,UAAT,CAAqBC,IAArB,EAA2B;AAC9B,SAAO,UAAUV,QAAV,EAAoB;AACvBW,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAOX,KAAK,CAAC,gCAAD,EAAmC;AAC3CY,MAAAA,MAAM,EAAG,MADkC;AAE3CC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;AAClB;AACAR,QAAAA,IAAI,EAAGE,IAAI,CAACF,IAFM;AAGlBS,QAAAA,IAAI,EAAGP,IAAI,CAACO,IAHM;AAIlBC,QAAAA,KAAK,EAAGR,IAAI,CAACQ,KAJK;AAKlBC,QAAAA,KAAK,EAAGT,IAAI,CAACS,KALK;AAMlBC,QAAAA,MAAM,EAAGV,IAAI,CAACU,MANI;AAOlBC,QAAAA,OAAO,EAAGX,IAAI,CAACW,OAPG;AAQlBC,QAAAA,MAAM,EAAGZ,IAAI,CAAEY,MARG;AASlBC,QAAAA,MAAM,EAAGb,IAAI,CAACa;AATI,OAAf,CAFoC;AAa3CC,MAAAA,OAAO,EAAG;AACN,wBAAiB;AADX;AAbiC,KAAnC,CAAL,CAiBFtB,IAjBE,CAiBGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAjBV,EAkBFF,IAlBE,CAkBGC,GAAG,IAAGH,QAAQ,CAAC;AACjBK,MAAAA,IAAI,EAAG,aADU;AAEjBC,MAAAA,OAAO,EAAGH;AAFO,KAAD,CAlBjB,CAAP;AAsBH,GAxBD;AAyBH;AAED,OAAO,SAASsB,QAAT,GAAqB;AACxB,SAAO,UAAUzB,QAAV,EAAoB;AACvBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADhB,EAEKF,IAFL,CAEUC,GAAG,IAAGH,QAAQ,CAAC;AACjBK,MAAAA,IAAI,EAAG,WADU;AAEjBC,MAAAA,OAAO,EAAGH;AAFO,KAAD,CAFxB;AAMH,GAPD;AAQH;AAED,OAAO,SAASuB,YAAT,CAAuBrB,IAAvB,EAA6B;AAChC,SAAO;AACHA,IAAAA,IAAI,EAAG,gBADJ;AAEHC,IAAAA,OAAO,EAAGD;AAFP,GAAP;AAIH;AAED,OAAO,SAASsB,cAAT,GAA2B;AAC9B,SAAO;AACHtB,IAAAA,IAAI,EAAG,kBADJ;AAEHC,IAAAA,OAAO,EAAGsB;AAFP,GAAP;AAIH","sourcesContent":["import axios from \"axios\"\r\n\r\nexport function getAllPoke () {\r\n    return function (dispatch){\r\n        return fetch(\"http://localhost:3001/pokemons\")\r\n            .then(obj=> obj.json())  \r\n            .then(obj => dispatch({\r\n                type : \"GET_ALL_POKEMONS\",\r\n                payload : obj\r\n            }))\r\n        /* return dispatch({\r\n            type : \"GET_ALL_POKEMONS\",\r\n            payload : poke\r\n        }) */\r\n    }\r\n}\r\n\r\nexport function getOnePoke (name) {\r\n    return function (dispatch){\r\n        return fetch(\"http://localhost:3001/pokemons?name=\" + name)\r\n            .then(obj=>obj.json())\r\n            .then(obj => dispatch({\r\n                type : \"GET_ONE_POKEMON\",\r\n                payload : obj\r\n            }))\r\n    }\r\n}\r\n\r\nexport function createPoke (data) {\r\n    return function (dispatch) {\r\n        console.log(\"entro\")\r\n        return fetch(\"http://localhost:3001/pokemons\", {\r\n            method : \"POST\",\r\n            body : JSON.stringify({\r\n                //name, life , strong, defense, speed, height, weight, types\r\n                name : data.name,\r\n                life : data.life,\r\n                types : data.types,\r\n                speed : data.speed,\r\n                strong : data.strong,\r\n                defense : data.defense,\r\n                weight : data. weight,\r\n                height : data.height\r\n                }),\r\n            headers : {\r\n                \"Content-type\" : \"application/json\"\r\n            }\r\n            })  \r\n            .then(obj => obj.json())\r\n            .then(obj=> dispatch({\r\n                type : \"CREATE_POKE\",\r\n                payload : obj\r\n            }))\r\n    }\r\n}\r\n\r\nexport function getTypes () {\r\n    return function (dispatch) {\r\n        fetch(\"http://localhost:3001/types\")\r\n            .then(obj=> obj.json())\r\n            .then(obj=> dispatch({\r\n                type : \"GET_TYPES\",\r\n                payload : obj\r\n            }))\r\n    }\r\n}\r\n\r\nexport function filterByType (type) {\r\n    return {\r\n        type : \"FILTER_BY_TYPE\",\r\n        payload : type\r\n    }\r\n}\r\n\r\nexport function filterByOrigin () {\r\n    return {\r\n        type : \"FILTER_BY_ORIGIN\",\r\n        payload : origin\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}