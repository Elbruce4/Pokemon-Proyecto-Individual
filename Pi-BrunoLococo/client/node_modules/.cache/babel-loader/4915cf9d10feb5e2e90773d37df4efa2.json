{"ast":null,"code":"import { getAllPoke } from \"../actions\";\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemon: {},\n  types: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ALL_POKEMONS\":\n      return { ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n\n    case \"GET_ONE_POKEMON\":\n      return { ...state,\n        pokemon: action.payload\n      };\n\n    case \"CREATE_POKE\":\n      return { ...state,\n        pokemons: state.pokemons.concat(action.payload)\n      };\n\n    default:\n      return { ...state\n      };\n\n    case \"GET_TYPES\":\n      return { ...state,\n        types: action.payload\n      };\n\n    case \"FILTER_BY_TYPE\":\n      let pokes = state.allPokemons;\n      let filterByType = pokes.filter(obj => action.payload === obj.type[0].name);\n      return { ...state,\n        pokemons: filterByType\n      };\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/USER/desktop/proyectos/Pokemon-Proyecto-Individual/pi-brunolococo/client/src/reducer/index.js"],"names":["getAllPoke","initialState","pokemons","allPokemons","pokemon","types","rootReducer","state","action","type","payload","concat","pokes","filterByType","filter","obj","name"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAG,EADM;AAEjBC,EAAAA,WAAW,EAAG,EAFG;AAGjBC,EAAAA,OAAO,EAAG,EAHO;AAIjBC,EAAAA,KAAK,EAAG;AAJS,CAArB;;AAOA,SAASC,WAAT,GAAqD;AAAA,MAA/BC,KAA+B,uEAAvBN,YAAuB;AAAA,MAARO,MAAQ;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,kBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHL,QAAAA,QAAQ,EAAGM,MAAM,CAACE,OAFf;AAGHP,QAAAA,WAAW,EAAGK,MAAM,CAACE;AAHlB,OAAP;;AAKJ,SAAK,iBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAGI,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,QAAQ,EAAGK,KAAK,CAACL,QAAN,CAAeS,MAAf,CAAsBH,MAAM,CAACE,OAA7B;AAFR,OAAP;;AAIA;AAAS,aAAO,EAAC,GAAGH;AAAJ,OAAP;;AACb,SAAK,WAAL;AACI,aAAO,EACH,GAAGA,KADA;AAEHF,QAAAA,KAAK,EAAGG,MAAM,CAACE;AAFZ,OAAP;;AAIJ,SAAK,gBAAL;AACI,UAAIE,KAAK,GAAGL,KAAK,CAACJ,WAAlB;AACA,UAAIU,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,GAAG,IAAIP,MAAM,CAACE,OAAP,KAAmBK,GAAG,CAACN,IAAJ,CAAS,CAAT,EAAYO,IAAnD,CAAnB;AACA,aAAO,EACH,GAAGT,KADA;AAEHL,QAAAA,QAAQ,EAAGW;AAFR,OAAP;AA1BR;AAgCH;;AAED,eAAeP,WAAf","sourcesContent":["import {getAllPoke} from \"../actions\"\r\n\r\nconst initialState = {\r\n    pokemons : [],\r\n    allPokemons : [],\r\n    pokemon : {},\r\n    types : [],\r\n}\r\n\r\nfunction rootReducer (state = initialState , action) {\r\n    switch(action.type){\r\n        case \"GET_ALL_POKEMONS\":\r\n            return {\r\n                ...state,\r\n                pokemons : action.payload,\r\n                allPokemons : action.payload\r\n            }\r\n        case \"GET_ONE_POKEMON\":\r\n            return {\r\n                ...state,\r\n                pokemon : action.payload\r\n            }\r\n        case \"CREATE_POKE\":\r\n            return {\r\n                ...state,\r\n                pokemons : state.pokemons.concat(action.payload)\r\n            }\r\n            default: return {...state};\r\n        case \"GET_TYPES\" :\r\n            return {\r\n                ...state,\r\n                types : action.payload\r\n            }\r\n        case \"FILTER_BY_TYPE\":\r\n            let pokes = state.allPokemons;\r\n            let filterByType = pokes.filter(obj => action.payload === obj.type[0].name)\r\n            return {\r\n                ...state,\r\n                pokemons : filterByType\r\n            }\r\n    }\r\n    \r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}