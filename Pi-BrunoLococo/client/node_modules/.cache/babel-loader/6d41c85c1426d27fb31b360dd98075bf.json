{"ast":null,"code":"import { getAllPoke } from \"../actions\";\nconst initialState = {\n  pokemons: [],\n  allPokemons: [],\n  pokemon: {},\n  types: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ALL_POKEMONS\":\n      return { ...state,\n        pokemons: action.payload,\n        allPokemons: action.payload\n      };\n\n    case \"GET_ONE_POKEMON\":\n      return { ...state,\n        pokemon: action.payload\n      };\n\n    case \"CREATE_POKE\":\n      return { ...state,\n        pokemons: state.pokemons.concat(action.payload)\n      };\n\n    case \"GET_TYPES\":\n      return { ...state,\n        types: action.payload\n      };\n\n    case \"FILTER_BY_TYPE\":\n      let pokes = state.allPokemons;\n      let filterByType = action.payload === \" \" ? state.allPokemons : pokes.filter(obj => obj.types.map(obj => obj.name).includes(action.payload));\n      return { ...state,\n        pokemons: filterByType\n      };\n\n    case \"FILTER_BY_ORIGIN\":\n      let pokesByOrigin = [];\n\n      if (action.payload === \"All\" || action.payload === \" \") {\n        pokesByOrigin = state.allPokemons;\n      } else if (action.payload === \"Db\") {\n        pokesByOrigin = state.allPokemons.filter(obj => obj.createdInDb);\n      } else if (action.payload === \"Api\") {\n        pokesByOrigin = state.allPokemons.filter(obj => !obj.createdInDb);\n      }\n\n      return { ...state,\n        pokemons: pokesByOrigin\n      };\n\n    case \"CLEAN_SEARCH\":\n      return { ...state,\n        pokemon: action.payload\n      };\n\n    case \"FILTER_BY_NAME\":\n      if (action.payload === \" \") {} else {\n        let orderPokes = action.payload === \"asc\" ? state.allPokemons.sort((a, b) => {\n          if (a.name > b.name) {\n            return 1;\n          } else if (a.name < b.name) {\n            return -1;\n          } else {\n            return 0;\n          }\n        }) : state.allPokemons.sort((a, b) => {\n          if (a.name > b.name) {\n            return -1;\n          } else if (a.name < b.name) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        return { ...state,\n          pokemons: orderPokes\n        };\n      }\n\n    case \"FILTER_BY_STRONG\":\n      if (action.payload === \" \") return { ...state,\n        pokemons: state.allPokemons\n      };\n      let stronger = action.payload === \"-\" ? state.allPokemons.sort((a, b) => {\n        if (a.strong > b.strong) {\n          return 1;\n        } else if (a.strong < b.strong) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }) : state.allPokemons.sort((a, b) => {\n        if (a.strong > b.strong) {\n          return -1;\n        } else if (a.strong < b.strong) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      return { ...state,\n        pokemons: stronger\n      };\n\n    case \"GET_DETAIL\":\n      return { ...state,\n        pokemon: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/PROYECTOS/Pokemon-Proyecto-Individual/Pi-BrunoLococo/client/src/reducer/index.js"],"names":["getAllPoke","initialState","pokemons","allPokemons","pokemon","types","rootReducer","state","action","type","payload","concat","pokes","filterByType","filter","obj","map","name","includes","pokesByOrigin","createdInDb","orderPokes","sort","a","b","stronger","strong"],"mappings":"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","sourcesContent":["\r\nimport {getAllPoke} from \"../actions\"\r\n\r\nconst initialState = {\r\n    pokemons : [],\r\n    allPokemons : [],\r\n    pokemon : {},\r\n    types : [],\r\n}\r\n\r\nfunction rootReducer (state = initialState , action) {\r\n    switch(action.type){\r\n        case \"GET_ALL_POKEMONS\":\r\n            return {\r\n                ...state,\r\n                pokemons : action.payload,\r\n                allPokemons : action.payload\r\n            }\r\n        case \"GET_ONE_POKEMON\":\r\n            return {\r\n                ...state,\r\n                pokemon : action.payload\r\n            }\r\n        case \"CREATE_POKE\":\r\n\r\n            return {\r\n                ...state,\r\n                pokemons : state.pokemons.concat(action.payload)\r\n            }\r\n        case \"GET_TYPES\" :\r\n            return {\r\n                ...state,\r\n                types : action.payload\r\n            }\r\n        case \"FILTER_BY_TYPE\":\r\n            let pokes = state.allPokemons;\r\n            let filterByType = action.payload === \" \" ? state.allPokemons : \r\n            pokes.filter(obj => \r\n                obj.types.map(obj => obj.name).includes(action.payload))\r\n            return {\r\n                ...state,\r\n                pokemons : filterByType\r\n            }\r\n        case \"FILTER_BY_ORIGIN\":\r\n            let pokesByOrigin = [];\r\n            if(action.payload === \"All\" || action.payload === \" \"){\r\n                pokesByOrigin = state.allPokemons\r\n            } else if (action.payload === \"Db\") {\r\n                pokesByOrigin = state.allPokemons.filter (obj => obj.createdInDb)\r\n            } else if (action.payload === \"Api\") {\r\n                pokesByOrigin = state.allPokemons.filter (obj => !obj.createdInDb)\r\n            }\r\n            return {\r\n                ...state,\r\n                pokemons : pokesByOrigin\r\n            }\r\n        case \"CLEAN_SEARCH\":\r\n            return {\r\n                ...state,\r\n                pokemon : action.payload\r\n            }\r\n        case \"FILTER_BY_NAME\":\r\n            if(action.payload === \" \"){\r\n\r\n            } else {\r\n\r\n                let orderPokes = action.payload === \"asc\" ? \r\n                state.allPokemons.sort((a , b) =>{\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    } else if (a.name < b.name) {\r\n                        return -1;\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                }) : \r\n                state.allPokemons.sort((a , b) =>{\r\n                    if (a.name > b.name) {\r\n                        return -1;\r\n                    } else if (a.name < b.name) {\r\n                        return 1;\r\n                    } else {\r\n                        return 0\r\n                    }\r\n                })\r\n                return {\r\n                    ...state,\r\n                    pokemons : orderPokes\r\n                }      \r\n            }\r\n        case \"FILTER_BY_STRONG\":\r\n            if (action.payload === \" \") return {...state, pokemons : state.allPokemons}\r\n            let stronger = action.payload === \"-\" ? \r\n            state.allPokemons.sort((a,b) => {\r\n                if (a.strong > b.strong) {\r\n                    return 1;\r\n                } else if (a.strong < b.strong) {\r\n                    return -1;\r\n                } else {\r\n                    return 0\r\n                }\r\n            }) : \r\n            state.allPokemons.sort((a , b) =>{\r\n                if (a.strong > b.strong) {\r\n                    return -1;\r\n                } else if (a.strong < b.strong) {\r\n                    return 1;\r\n                } else {\r\n                    return 0\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                pokemons : stronger\r\n            }\r\n        case \"GET_DETAIL\" :\r\n            return {\r\n                ...state,\r\n                pokemon : action.payload\r\n            }\r\n            default: return {...state};\r\n    }\r\n    \r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}